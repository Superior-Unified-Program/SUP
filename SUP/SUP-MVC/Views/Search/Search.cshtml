@model SUP_MVC.Models.Search.SearchViewModel

@{
    ViewData["Title"] = "Search";
}
<html>
<head>
    <meta charset="utf-8">
    <title>Search</title>
    <style>
        body {
            margin-left: 0px;
            margin-top: 0px;
            margin-right: 0px;
            margin-bottom: 0px;
        }
        .organize {
            width: 100%;
            height: 100%;
        }

        .logo {
            height: 95%;
            float: right;
            top: 1px;
            margin-top: 2px;
            margin-right: 2px;
        }

        .universitylogo {
            height: 95%;
            float: right;
            top: 1px;
            margin-top: 2px;
            margin-right: 2px;
        }

        #button {
            text-align: inherit;
        }

        .popupForm {
            display: none;
            background-color: #E0E0E0;
            border: 1px solid black;
            position: fixed;
            bottom: 10%;
            top: 10%;
            left: 10%;
            right: 10%;
        }

        .auto_hidden {
            width: 204px;
            border-top: 1px solid #333;
            border-bottom: 1px solid #333;
            border-left: 1px solid #333;
            border-right: 1px solid #333;
            position: absolute;
            display: none;
        }

        .auto_show {
            width: 204px;
            border-top: 1px solid #333;
            border-bottom: 1px solid #333;
            border-left: 1px solid #333;
            border-right: 1px solid #333;
            position: absolute;
            z-index: 9999;
            display: block;
        }

        .auto_onmouseover {
            color: #ffffff;
            background-color: highlight;
            width: 100%;
        }

        .auto_onmouseout {
            color: #000000;
            width: 100%;
            background-color: #ffffff;
        }
    </style>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script>
        $(document).ready(function () {
            Search();
            $('.searchOrganization').change(function () {
                Search();
            });
            $('.checkAll').click(function () {
                var checkedAll = false;
                checkedAll = $('.checkAll').prop('checked');
                $('.rowSelected').each(function () {
                    if (checkedAll != $(this).prop('checked')) {
                        $(this).click();
                    }
                });
            })
        })
        function Search() {
            var firstName = $('.searchFirstName').val();
            var lastName = $('.searchLastName').val();
            var organization = $(".searchOrganization option:selected").text(); //$('.searchOrganization').val();
            var active = ($('.displayOnlyActiveClientsInput:checked').length >= 1);
            var dataPost = firstName + ',' + lastName + ',' + organization + ',' + active;
            $.ajax({
                url: '/Search/SearchClients',
                type: 'POST',
                data: JSON.stringify(dataPost),
                contentType: 'application/json; charset=utf-8',
                error: function (xhr) {
                    alert('Error: ' + xhr.statusText);
                },
                success: function (result) {
                    var returnedData = JSON.parse(result);
                    $('.removableRow').remove();
                    $('.templateRow').hide();
                    if (returnedData.length == 0) {
                        $('.templateRow').show();
                    }
                    for (var i = 0; i < returnedData.length; i++) {
                        var currentRow = returnedData[i];
                        var Row = $('.templateRow').clone();
                        Row.removeClass('templateRow').addClass('removableRow').show();
                        Row.find('.rowFirstName').val(currentRow['First_Name']);
                        Row.find('.rowLastName').val(currentRow['Last_Name']);
                        if (currentRow['Email'] != null)
                            Row.find('.rowEmailAddress').val(currentRow['Email']['Email']);
                        if (currentRow['Phone'] != null)
                            Row.find('.rowPhoneNumber').val(currentRow['Phone']['Number']);
                        if (currentRow['Org'] != null) {
                            Row.find('.rowOrganization').val(currentRow['Org']['Org_Name']);
                        }
                        var clientId = currentRow['ID']
                        Row.find('.rowViewButton').val(clientId);
                        $('.checkedId').each(function (index) {
                            if ($(this).text() == clientId) {
                                Row.find('.rowSelected').prop('checked', true);
                            }
                        });
                        $('.templateRow').parent().append(Row);
                    }
                    $('.rowViewButton').unbind('click').click(function () {
                        editClient($(this).val());
                    });
                    $('.rowSelected').unbind('click');
                    $('.rowSelected').click(function () {
                        var clientId = $(this).parent().parent().find('.rowViewButton').val();
                        if ($(this).prop('checked') == true) {
                            var Row = $('.checkedIdTemplate').clone();
                            Row.removeClass('checkedIdTemplate').addClass('checkedId');
                            Row.text(clientId);
                            $('.checkedIdsDiv').append(Row);
                        } else {
                            $('.checkedId').each(function (index) {
                                if ($(this).text() == clientId) {
                                    $(this).remove();
                                }
                            });
                        }
                    });
                },
                async: true,
                processData: false
            });
        }


        function editClient(clientId) {
            location.href = '/AddClient/AddClient?clientId=' + clientId;
        }

        function popForm() {
            document.getElementById("form").style.display = "block";
        }

        function closeForm() {
            document.getElementById("form").style.display = "none";
        }
        function toggle(source) {
            var checkboxes = document.getElementsByName('selectAll');
            for (var checkbox in checkboxes)
                checkbox.checked = source.checked;
        }

        function allCheck(name, boolValue) {
            var allvalue = document.getElementsByName(name);
            for (var i = 0; i < allvalue.length; i++) {
                if (allvalue[i].type == "checkbox")
                    allvalue[i].checked = boolValue;
            }
        }

        function reserveCheck(name) {
            var revalue = document.getElementsByName(name);
            for (i = 0; i < revalue.length; i++) {
                if (revalue[i].checked == true)
                    revalue[i].checked = false;
                else
                    revalue[i].checked = true;
                // revalue[i].checked = selected;
            }
        }



        var $ = function (id) {
            return "string" == typeof id ? document.getElementById(id) : id;
        }
        var Bind = function (object, fun) {
            return function () {
                return fun.apply(object, arguments);
            }
        }
        function AutoComplete(obj, autoObj, arr) {
            this.obj = $(obj);        //input
            this.autoObj = $(autoObj);//node on DIV
            this.value_arr = arr;        //no repeat
            this.index = -1;          //index on div
            this.search_value = "";   //save searching input
        }
        AutoComplete.prototype = {
            //initialize the div position
            init: function () {
                this.autoObj.style.left = this.obj.offsetLeft + "px";
                this.autoObj.style.top = this.obj.offsetTop + this.obj.offsetHeight +35 + "px";
                this.autoObj.style.width = this.obj.offsetWidth - 2 + "px";
            },

            deleteDIV: function () {
                while (this.autoObj.hasChildNodes()) {
                    this.autoObj.removeChild(this.autoObj.firstChild);
                }
                this.autoObj.className = "auto_hidden";
            },

            setValue: function (_this) {
                return function () {
                    _this.obj.value = this.seq;
                    _this.autoObj.className = "auto_hidden";
                }
            },

            autoOnmouseover: function (_this, _div_index) {
                return function () {
                    _this.index = _div_index;
                    var length = _this.autoObj.children.length;
                    for (var j = 0; j < length; j++) {
                        if (j != _this.index) {
                            _this.autoObj.childNodes[j].className = 'auto_onmouseout';
                        } else {
                            _this.autoObj.childNodes[j].className = 'auto_onmouseover';
                        }
                    }
                }
            },

            changeClassname: function (length) {
                for (var i = 0; i < length; i++) {
                    if (i != this.index) {
                        this.autoObj.childNodes[i].className = 'auto_onmouseout';
                    } else {
                        this.autoObj.childNodes[i].className = 'auto_onmouseover';
                        this.obj.value = this.autoObj.childNodes[i].seq;
                    }
                }
            }
            ,

            pressKey: function (event) {
                var length = this.autoObj.children.length;
                //"↓"
                if (event.keyCode == 40) {
                    ++this.index;
                    if (this.index > length) {
                        this.index = 0;
                    } else if (this.index == length) {
                        this.obj.value = this.search_value;
                    }
                    this.changeClassname(length);
                }
                //"↑"
                else if (event.keyCode == 38) {
                    this.index--;
                    if (this.index < -1) {
                        this.index = length - 1;
                    } else if (this.index == -1) {
                        this.obj.value = this.search_value;
                    }
                    this.changeClassname(length);
                }
                //enter
                else if (event.keyCode == 13) {
                    this.autoObj.className = "auto_hidden";
                    this.index = -1;
                } else {
                    this.index = -1;
                }
            },

            start: function (event) {
                if (event.keyCode != 13 && event.keyCode != 38 && event.keyCode != 40) {
                    this.init();
                    this.deleteDIV();
                    this.search_value = this.obj.value;
                    var valueArr = this.value_arr;
                    valueArr.sort();
                    if (this.obj.value.replace(/(^\s*)|(\s*$)/g, '') == "") { return; }
                    try { var reg = new RegExp("(" + this.obj.value + ")", "i"); }
                    catch (e) { return; }
                    var div_index = 0;
                    for (var i = 0; i < valueArr.length; i++) {
                        if (reg.test(valueArr[i])) {
                            var div = document.createElement("div");
                            div.className = "auto_onmouseout";
                            div.seq = valueArr[i];
                            div.onclick = this.setValue(this);
                            div.onmouseover = this.autoOnmouseover(this, div_index);
                            div.innerHTML = valueArr[i].replace(reg, "<strong>$1</strong>");
                            this.autoObj.appendChild(div);
                            this.autoObj.className = "auto_show";
                            div_index++;
                        }
                    }
                }
                this.pressKey(event);
                window.onresize = Bind(this, function () { this.init(); });
            }
        }
     

            /**/</script>
</head>


<body class="organize">
    <div class="checkedIdsDiv" style="display:none;">
        <p class="checkedIdTemplate"></p>
    </div>
    <div style="position: absolute; left: 15%; top: 10%; width: 85%;">
        <div style="position:relative; margin-left: 25%; width: 650px;" align="right">
            <form>
                <table style="position:relative; left: -90px">
                    <tr>
                        <td>
                            <p align="center">First Name</p>
                        </td>
                        <td>
                            <p align="center">Last Name</p>
                        </td>
                        <td>
                            <p align="center">Organization Type</p>
                        </td>
                    </tr>


                    <tr>
                        <td>

                            <input class="searchFirstName" id="search_FirstName" property="firstNameBeginText" type="text" onKeyUp="Search(),autoComplete.start(event)" placeholder="First Name">
                            <div class="auto_hidden" id="auto"></div>
                            <script>
                                var autoComplete = new AutoComplete('search_FirstName', 'auto', ['not', 'finished', 'yet', 'need', 'the', 'data']);
                            </script>

                        </td>
                        <td>
                            <input class="searchLastName" type="text" onKeyUp="Search()" placeholder="Last Name">
                        </td>
                        <td>
                            <select class="searchOrganization" onKeyUp="Search()" name="category">
                                <!--We need to keep an empty option to allow searches that do not include organization-->
                                <option value=""></option>
                                <option value="business">Business</option>
                                <option value="electedOfficial">Elected Official</option>
                                <option value="school">School</option>
                                <option value="elementary">Elementary</option>
                                <option value="middle">Middle</option>
                                <option value="highSchool">High School</option>
                                <option value="higherEd">Higher Ed.</option>
                                <option value="nonProfit">Non-profit</option>
                                <option value="UWSystem">UW-System</option>
                                <option value="boardOfRegent">Board of Regent</option>
                                <option value="foundation">Foundation</option>
                                <option value="other">Other</option>
                            </select>
                        </td>
                    </tr>
                    <tr><td height="10px"></td></tr>


                </table>
            </form>
            <div style="float:left; margin-left: calc(10% + 180px);">
                <p style="float:left;">Display active only: </p>
                <input style="margin-left:12px; margin-top:12px;" type="checkbox" onchange="Search()" class="displayOnlyActiveClientsInput" />
            </div>
        </div>
        <table style="float:left; position:relative; margin-left: calc(10% + 120px); left: -15px">
            <tbody>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>
                        <a href="javascript:allCheck('choice',true)">Select</a>
                        <a href="javascript:allCheck('choice',false)">No select</a>
                        <a href="javascript:reserveCheck('choice')"> Inverse</a>
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td style="width: 183px">
                        <p><b>First Name</b></p>
                    </td>
                    <td style="width: 188px">
                        <p><b>Last Name</b></p>
                    </td>
                    <td style="width: 199px">
                        <p><b>Organization Name</b></p>
                    </td>
                    <td style="width: 175px">
                        <p><b>Email</b></p>
                    </td>
                    <td style="width: 128px">
                        <p><b>Phone #</b></p>
                    </td>
                    <td>
                        <input class="checkAll" type="checkbox" name="choice" id="choice">
                    </td>
                </tr>
            </tbody>
        </table>
        <div style="height: 420px; overflow-y:scroll; overflow-x: hidden; width: 1050px; margin-left: calc(10% - 20px);" align="right">
            <table style="position:relative; left: -20px">
                <tbody>
                    <tr class="templateRow" style="">
                        <td>
                            <button class="rowViewButton" value="0">View</button>
                        </td>
                        <td>
                            <input class="rowFirstName" type="text" value="" disabled>
                        </td>
                        <td>
                            <input class="rowLastName" type="text" value="" disabled>
                        </td>
                        <td>
                            <input class="rowOrganization" type="text" value="" disabled>
                        </td>
                        <td>
                            <input class="rowEmailAddress" type="text" value="" disabled>
                        </td>
                        <td>
                            <input class="rowPhoneNumber" type="text" value="" disabled>
                        </td>
                        <td>
                            <input class="rowSelected" type="checkbox" name="choice" id="choice" />
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <button class="template" onclick="popForm()">Select Template</button>
        <div class="popupForm" id="form">
            <form action="middlewareHere" class="form-container">
                <h1>Login</h1>

                <label for="email"><b>Email</b></label>
                <input type="text" placeholder="Enter Email" name="email" required>

                <label for="psw"><b>Password</b></label>
                <input type="password" placeholder="Enter Password" name="psw" required>

                <button type="submit" class="btn">Login</button>
                <button type="button" class="btn cancel" onclick="closeForm()">Close</button>
            </form>

        </div>
    </div>
</body>
</html>
