@model SUP_MVC.Models.Search.SearchViewModel

@{
    ViewData["Title"] = "Search";
}
<html>
<head>
    <meta charset="utf-8">
    <title>Search</title>
    <style>
		.rowJobTitle option {
			background-color: #decc47
		}

		.rowOrganization option {
			background-color: #decc47
		}

        @@media only screen and (max-width: 600px) {
            #ribbonDiv {
                margin-left: -25%;
            }

            #mainWindow {
                left: -15%;
                position: absolute;
            }
        }

        #mainWindow {
            position: absolute;
            left: 15%;
            top: 10%;
            width: 85%;
        }

        .templateTable {
            width: 100%;
            position: relative;
            border-collapse: collapse;
        }

        .organize {
            width: 100%;
            height: 100%;
        }

        .logo {
            height: 95%;
            float: right;
            top: 1px;
            margin-top: 2px;
            margin-right: 2px;
        }

        .universitylogo {
            height: 95%;
            float: right;
            top: 1px;
            margin-top: 2px;
            margin-right: 2px;
        }

        #button {
            text-align: inherit;
        }

        .popupForm {
            display: none;
            background-color: #E0E0E0;
            border: 1px solid black;
            position: fixed;
            bottom: 10%;
            top: 10%;
            left: 10%;
            right: 10%;
        }

        .flex-container {
            display: flex;
            width: 100%;
            height: 20%;
            align-items: center;
            flex-direction: row;
            justify-content: center;
        }

        .sidebar-left {
            align-self: center;
            width: 33.3%;
            margin: 5px;
            padding: 10px;
        }

        .sidebar-middle {
            align-self: center;
            width: 33.3%;
            margin: 5px;
            padding: 10px;
        }

        .sidebar-right {
            align-self: center;
            width: 33.3%;
            margin: 5px;
            padding: 10px;
        }

        .searchResult {
            height: 420px;
            overflow-y: scroll;
            overflow-x: auto;
            width: 80%;
            margin-left: 10%;
        }


        .flex-select {
            width: 14.3%;
            float: right;
            margin-right: 7.8%;
            margin-left: 75.9%;
        }

        .flex-colum {
            align-content: center;
            overflow: auto;
            width: calc((73%-79px)/6);
            height: 29px;
            float: left;
            overflow: hidden;
        }

        .flex-view {
            margin-left: 10%;
            width: 56px;
            float: left;
        }

        .flex-checkBox {
            margin-right: 11%;
            width: 13px;
            float: right;
        }

        .yellowizedSelect {
            box-shadow: inset 0px 1px 0px 0px #fcf6cf;
            background: linear-gradient(to bottom, #ffd146 5%, #decc47 100%);
            background-color: #edf035;
            border: 1px solid #241e19;
            display: inline-block;
            cursor: pointer;
            color: #2e1813;
            font-family: Arial;
            font-size: 10px;
            font-weight: bold;
            padding: 3px;
            text-decoration: none;
        }


        .auto_hidden {
            width: 200px;
            border: #E0E0E0;
            border-top: 1px solid;
            border-bottom: 1px solid;
            border-left: 1px solid;
            border-right: 1px solid;
            position: absolute;
            display: none;
        }

        .auto_show {
            width: 200px;
            border: #E0E0E0;
            border-top: 1px solid;
            border-bottom: 1px solid;
            border-left: 1px solid;
            border-right: 1px solid;
            position: absolute;
            z-index: 9999;
            display: block;
        }

        .auto_onmouseover {
            color: #ffffff;
            background-color: highlight;
            width: 100%;
        }

        .auto_onmouseout {
            color: #000000;
            width: 100%;
            background-color: #ffffff;
        }

        .templateTable {
            background-color: #808080;
        }

        .dataCell {
            width: 100%;
        }

        .yellowizedButton {
            box-shadow: inset 0px 1px 0px 0px #fcf6cf;
            background: linear-gradient(to bottom, #ffd146 5%, #decc47 100%);
            background-color: #edf035;
            border: 1px solid #241e19;
            display: inline-block;
            cursor: pointer;
            color: #2e1813;
            font-family: Arial;
            font-size: 13px;
            font-weight: bold;
            padding: 6px 12px;
            text-decoration: none;
        }

            .yellowizedButton:hover {
                background: linear-gradient(to bottom, #decc47 5%, #ffd146 100%);
                background-color: #d1c060;
            }


        .yellowizedTextField {
            display: inline-block;
            -webkit-box-sizing: content-box;
            -moz-box-sizing: content-box;
            box-sizing: content-box;
            padding: 13px 0 0 13px;
            border: 1.5px solid rgba(28,13,10,1);
            -webkit-border-radius: 2px;
            border-radius: 2px;
            font: normal 16px/normal Arial, Helvetica, sans-serif;
            color: rgba(38,23,17,1);
            -o-text-overflow: clip;
            text-overflow: clip;
            background: rgba(220,220,220,1);
            -webkit-box-shadow: 2px 1px 1px 1px rgba(0,0,0,0.2) inset;
            box-shadow: 2px 1px 1px 1px rgba(0,0,0,0.2) inset;
        }

        ::-webkit-scrollbar {
            width: 13px;
            height: 13px;
        }

        ::-webkit-scrollbar-button {
            width: 0px;
            height: 0px;
        }

        ::-webkit-scrollbar-thumb {
            background: #dfcd50;
            border: 0px none #24211e;
            border-radius: 50px;
        }

            ::-webkit-scrollbar-thumb:hover {
                background: #daca40;
            }

            ::-webkit-scrollbar-thumb:active {
                background: #c7a444;
            }

        ::-webkit-scrollbar-track {
            background: rgb(176,176,176);
            border: 1px solid #000000;
            border-radius: 50px;
        }

            ::-webkit-scrollbar-track:hover {
                background: rgb(176,176,176);
            }

            ::-webkit-scrollbar-track:active {
                background: rgb(176,176,176);
            }

        ::-webkit-scrollbar-corner {
            background: transparent;
        }

        .custom-select {
            position: relative;
            font-family: Arial;
        }

            .custom-select select {
                display: none; /*hide original SELECT element:*/
            }

        .select-selected {
            background-color: yellow;
        }

            /*style the arrow inside the select element:*/
            .select-selected:after {
                position: absolute;
                content: "";
                top: 14px;
                right: 10px;
                width: 0;
                height: 0;
                border: 6px solid transparent;
                border-color: #fff transparent transparent transparent;
            }

            /*point the arrow upwards when the select box is open (active):*/
            .select-selected.select-arrow-active:after {
                border-color: transparent transparent #fff transparent;
                top: 7px;
            }

        /*style the items (options), including the selected item:*/
        .select-items div, .select-selected {
            color: #ffffff;
            padding: 8px 16px;
            border: 1px solid transparent;
            border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
            cursor: pointer;
            user-select: none;
        }

        /*style items (options):*/
        .select-items {
            position: absolute;
            background-color: yellow;
            top: 100%;
            left: 0;
            right: 0;
            z-index: 99;
        }

        /*hide the items when the select box is closed:*/
        .select-hide {
            display: none;
        }

        .select-items div:hover, .same-as-selected {
            background-color: rgba(0, 0, 0, 0.1);
        }

        .customInput {
            -webkit-box-sizing: content-box;
            -moz-box-sizing: content-box;
            box-sizing: content-box;
            padding: 8px 8px 8px 8px;
            border-top: 1px solid #b7b7b7;
            border-right: 2px solid #b7b7b7;
            border-bottom: 1px solid #b7b7b7;
            border-left: 2px solid #b7b7b7;
            -webkit-border-radius: 5px / 40px;
            border-radius: 5px / 40px;
            font: normal 16px/normal Arial, Helvetica, sans-serif;
            color: rgba(0,0,0,1);
            -o-text-overflow: clip;
            text-overflow: clip;
            background: rgba(255,255,224,1);
            -webkit-box-shadow: 2px 2px 0 0 rgba(0,0,0,0.2) inset;
            box-shadow: 2px 2px 0 0 rgba(0,0,0,0.2) inset;
            text-shadow: 1px 1px 0 rgba(254,255,242,1);
        }

        .scrollTable{
             overflow-y:scroll; 
            height:50%; 
            display:block;
            margin-top:50px;    
            }
        .scrollTh{
                width:100%; 
                  
            }
        .scrollTd{
            width:100%;    
            }

    </style>

    <link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Raleway'>
    <link rel='stylesheet' href='https://fonts.googleapis.com/icon?family=Material+Icons'>

    <link rel="stylesheet" href="css/style.css">

    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script>

        $(document).ready(function () {
            $('.addTemplate').hide().prop("disabled",true);
            $('.fileSelecterButton').change(function (e) {
                if (e.target.files[0] == null || typeof (e.target.files[0]) == "undefined") {
                    $('.addTemplate').hide().prop("disabled", true);
                }
                else {
                    $('.addTemplate').show().prop("disabled",false);
                }
            })

            document.getElementById('searchTemplateField').addEventListener("keyup", function (event) {
				if (event.keyCode === 13) {
					event.preventDefault();
					document.getElementById("searchTemplateButton").click();
				}
			});

			setTimeout(function () {
				$('a').click(function () {
					Search();
					setTimeout(function () {
						$('a').click(function () {
							selectClick();
						});

						$('i').click(function () {
							selectClick();
						});
					}, 1000);
				});
			}, 2000);

			function selectClick() {
				Search();
				setTimeout(function () {
					$('a').unbind('click').click(function () {
						selectClick();
					});

					$('i').unbind('click').click(function () {
						selectClick();
					});
				}, 350);
			}

            Search();

            $('.checkAll').click(function () {
                var checkedAll = false;
                checkedAll = $('.checkAll').prop('checked');
                $('.rowSelected').each(function () {
                    if (checkedAll != $(this).prop('checked')) {
                        $(this).click();
                    }
                });
            })
        })



        function Export() {
            var dataPost = "";
            $('.rowViewButton').each(function () {
                var curParent = $(this).parent().parent();

                if (curParent.find(':checkbox').prop('checked') == true)
                    dataPost += $(this).val() + " ";
            });
            $.ajax({
                url: '/Search/ExportSearch',
                type: 'POST',
                data: JSON.stringify(dataPost),
                contentType: 'application/json; charset=utf-8',
                error: function (xhr) {
                    alert('Error: ' + xhr.statusText);
                },
                success: function (result) {
                    returnedData = JSON.parse(result);
                    if (returnedData != "") {
                        //use window.location.href for redirect to download action for download the file
                        window.location.href = "@Url.RouteUrl(new { Controller = "Search", Action = "DownloadExcel" })/?fileName=" + returnedData;
            }
                },
                async: true,
                processData: false
            });
        }

		function TemplateMerge() {
			var radioValue = $("input[class='selecter']:checked").val();
            var dataPost = radioValue + " ";
            $('.rowViewButton').each(function () {
                var curParent = $(this).parent().parent();

                if (curParent.find(':checkbox').prop('checked') == true)
                    dataPost += $(this).val() + " ";
            });
            $.ajax({
                url: '/Search/TemplateMerge',
                type: 'POST',
                data: JSON.stringify(dataPost),
                contentType: 'application/json; charset=utf-8',
                error: function (xhr) {
                    alert('Error: ' + xhr.statusText);
                },
                success: function (result) {
                    returnedData = JSON.parse(result);
                    var dataArray = returnedData.split('?');
                    if (dataArray.length == 2) {
                        if (dataArray[0] != "") {
                            $('.returnedResults').text(dataArray[1] + " documents generated.");
                            //use window.location.href for redirect to download action for download the file
                            window.location.href = "@Url.RouteUrl(new { Controller = "Search", Action = "DownloadZipFile" })/?fileName=" + dataArray[0];
                        }
                    }
                },
                async: true,
                processData: false
            });
        }

		function ExportTemplate() {
			var dataPost = "";
            $('.rowViewButton').each(function () {
                var curParent = $(this).parent().parent();

                if (curParent.find(':checkbox').prop('checked') == true)
                    dataPost += $(this).val() + " ";
            });
            $.ajax({
                url: '/Search/TemplateMerge',
                type: 'POST',
                data: JSON.stringify(dataPost),
                contentType: 'application/json; charset=utf-8',
                error: function (xhr) {
                    alert('Error: ' + xhr.statusText);
                },
                success: function (result) {
                    returnedData = JSON.parse(result);
                    var dataArray = returnedData.split('?');
                    if (dataArray.length == 2) {
                        if (dataArray[0] != "") {
                            //use window.location.href for redirect to download action for download the file
                            window.location.href = "@Url.RouteUrl(new { Controller = "Search", Action = "DownloadTemplate" })/?fileName=" + dataArray[0];
                        }
                    }
                },
                async: true,
                processData: false
            });
		}

		function LoadTemplates() {
            var dataPost = "";
            $.ajax({
                url: '/Search/GetTemplateInfo',
                type: 'POST',
                data: JSON.stringify(dataPost),
                contentType: 'application/json; charset=utf-8',
                error: function (xhr) {
                    alert('Error: ' + xhr.statusText);
                },
                success: function (result) {
					returnedData = JSON.parse(result);
					$('.templateTableRow').remove();
					$('.templateRowTemplate').hide();
					for (var i = 0; i < returnedData.length; i++) {
						var splitter = returnedData[i].lastIndexOf(" ");
						var name = returnedData[i].substring(0, splitter);
						var date = returnedData[i].substring(splitter + 1);
						var Row = $('.templateRowTemplate').clone();
						Row.removeClass('templateRowTemplate').addClass('templateTableRow').show();
						Row.find('.rowTemplateName').text(name);
						Row.find('.rowTemplateDate').text(date);
						Row.find('.selecter').val(name);
						$('.templateRowTemplate').parent().append(Row);
						Row.show();
					}
                },
                async: true,
                processData: false
            });
		}

		function UploadTemplate() {
			var dataPost = "";
            $.ajax({
                url: '/Search/UploadFile',
                type: 'POST',
                data: JSON.stringify(dataPost),
                contentType: 'application/json; charset=utf-8',
                error: function (xhr) {
                    alert('Error: ' + xhr.statusText);
                },
                success: function (result) {
					returnedData = JSON.parse(result);
                },
                async: true,
                processData: false
            });
		}

		function Search() {
            var firstName = $('.searchFirstName').val();
            var lastName = $('.searchLastName').val();
			var organizationDivs = $('.item:not(".remove"):not(".hide")');
			var organization = "";
			organizationDivs.each(function () {
				var org = $(this).text()
				organization += org.substring(0,(org.length-1)) + ";";
			})
			organization = organization.substring(0, (organization.length - 1));
			var active = ($('.displayOnlyActiveClientsInput:checked').length < 1);
            var dataPost = firstName + ',' + lastName + ',' + organization + ',' + active;
			$.ajax({
				url: '/Search/SearchClients',
				type: 'POST',
				data: JSON.stringify(dataPost),
				contentType: 'application/json; charset=utf-8',
				error: function (xhr) {
					alert('Error: ' + xhr.statusText);
				},
				success: function (result) {
					returnedData = JSON.parse(result);


					$('.removableRow').remove();
					$('.firstName').remove();
					$('.lastName').remove();
					$('.templateRow').hide();
					if (returnedData == null) {
						alert("There is no such person.");
					}
					else if (returnedData.length == 0) {
						$('.templateRow').show();
					}
					else {

						for (var i = 0; i < returnedData.length; i++) {
							var currentRow = returnedData[i];
							var hasPermit = (currentRow['Permit_Num'] != "");
							var breakfastAttendee = (currentRow['Community_Breakfast'] != false);
							var holidayCardRecipient = (currentRow['Holiday_Card'] != false);
							if (($('.displayOnlyHasPermit').prop('checked') == false || hasPermit) &&
								($('.displayOnlyHBreakfastAttendee').prop('checked') == false || breakfastAttendee) &&
								($('.displayOnlyHolidayCard').prop('checked') == false || holidayCardRecipient)) {

								var Row = $('.templateRow').clone();
								Row.removeClass('templateRow').addClass('removableRow').show();
								Row.find('.rowFirstName').val(currentRow['First_Name']);
								Row.find('.rowLastName').val(currentRow['Last_Name']);

								if (currentRow['Email'] != null) {
									Row.find('.rowEmailAddress').val(currentRow['Email']['Email']);
								}
								if (currentRow['Phone'] != null) {
									Row.find('.rowPhoneNumber').val(currentRow['Phone']['Business_Phone_Formatted']);
								}
								// this returns primary (selected option)
								if (currentRow['Org'] != null) {
									Row.find('.rowOrganization').val(currentRow['Org']['Org_Name']);
									Row.find('.rowJobTitle').val(currentRow['Org']['Title']);
								}
								//---------------------

								
								var organizationList = currentRow['Organizations']
								for(var j = 0; j < organizationList.length; j++) {
									var orgName = organizationList[j]['Org_Name'];
									var orgTitle = organizationList[j]['Title'];
									Row.find('.rowOrganization').append(`<option value="">${orgName}</option>`)
									Row.find('.rowOrganization').change(function () {
										var index = $(this).prop('selectedIndex');
										$(this).parent().parent().find('.rowJobTitle').children().eq(index).prop('selected', true);
									});
									Row.find('.rowJobTitle').append(`<option value="">${orgTitle}</option>`)
									Row.find('.rowJobTitle').change(function () {
										var index = $(this).prop('selectedIndex');
										$(this).parent().parent().find('.rowOrganization').children().eq(index).prop('selected', true);
									});
								}

                                var clientId = currentRow['ID']
                                Row.find('.rowViewButton').val(clientId);

                                //autocomplete
                                var firstNameRow = $('.firstNameTemplate').clone();
                                firstNameRow.removeClass('firstNameTemplate').addClass('firstName');
                                firstNameRow.text(currentRow['First_Name']);
                                $('.firstNamesList').append(firstNameRow);

                                var lastNameRow = $('.lastNameTemplate').clone();
                                lastNameRow.removeClass('lastNameTemplate').addClass('lastName');
                                lastNameRow.text(currentRow['Last_Name']);
                                $('.lastNamesList').append(lastNameRow);


                                $('.checkedId').each(function (index) {
                                    if ($(this).text() == clientId) {
                                        Row.find('.rowSelected').prop('checked', true);
                                    }
                                });
                                $('.templateRow').parent().append(Row);
                            }
                        }
                        $('.rowViewButton').unbind('click').click(function () {
                            editClient($(this).val());
                        });
                        $('.rowSelected').unbind('click');
                        $('.rowSelected').click(function () {
                            var clientId = $(this).parent().parent().find('.rowViewButton').val();
                            if ($(this).prop('checked') == true) {
                                var Row = $('.checkedIdTemplate').clone();
                                Row.removeClass('checkedIdTemplate').addClass('checkedId');
                                Row.text(clientId);
                                $('.checkedIdsDiv').append(Row);
                            }
                            else {
                                $('.checkedId').each(function (index) {
                                    if ($(this).text() == clientId) {
                                        $(this).remove();
                                    }
                                });
                            }
                        });
                    }
                },
                async: true,
                processData: false
            });
		}

        function unselectAll() {
            $('.checkedId').each(function (index) {
                $(this).remove();
            });
        }

        function selectAll() {
            $('.checkedId').each(function (index) {
                var Row = $('.checkedIdTemplate').clone();
                Row.removeClass('checkedIdTemplate').addClass('checkedId');
                Row.text(clientId);
                $('.checkedIdsDiv').append(Row);
            });
        }

        function searchTemplates() {
            var searchText = $('.templateSearch').val().toLowerCase();
            $(".templateTableRow").each(function (index) {
                var clientId = $(this).parent().parent().find('.rowViewButton').val();
                var currentRowName = $(this).find('.rowTemplateName').text().toLowerCase();
                if (currentRowName.indexOf(searchText) >= 0) {
                    $(this).show();
                }
                else {
                    $(this).hide();
                }
            });
        }


        function editClient(clientId)
        {
            location.href = '/AddClient/AddClient?clientId=' + clientId;
        }

        function popSetup()
        {
            document.getElementById("setup").style.display = "flex";
        }

        function closeSetup()
        {
            document.getElementById("setup").style.display = "none";
        }
        function popConfirm()
        {

            document.getElementById("confirmation").style.display = "flex";
        }
        function closeConfirm()
        {
            document.getElementById("confirmation").style.display = "none";
        }
        function toggle(source)
        {
            var checkboxes = document.getElementsByName('selectAll');
            for (var checkbox in checkboxes)
                checkbox.checked = source.checked;
        }

        function allCheck(name, boolValue)
        {
            var allvalue = document.getElementsByName(name);
            for (var i = 0; i < allvalue.length; i++)
            {
                if (allvalue[i].type == "checkbox")
                    allvalue[i].checked = boolValue;
            }
        }

        function reserveCheck(name)
        {
            var revalue = document.getElementsByName(name);
            for (i = 0; i < revalue.length; i++)
            {
                if (revalue[i].checked == true)
                    revalue[i].checked = false;
                else
                    revalue[i].checked = true;
                // revalue[i].checked = selected;
            }
        }



        var $ = function (id)
        {
            return "string" == typeof id ? document.getElementById(id) : id;
        }
        var combine = function (result, a)
        {
            return function ()
            {
                return a.apply(result, arguments);
            }
        }
        function AutoComplete(input, node_Div, repeat)
        {
            this.input = $(input);
            this.node_Div = $(node_Div);
            this.noRepeat = repeat;
            this.index = -1;          //index on div
            this.searchValue = "";   //save searching input
        }
        AutoComplete.prototype =
        {
            //initialize the div position
            initialize: function ()
            {
                this.node_Div.style.left = this.input.offsetLeft + "px";
                this.node_Div.style.top = this.input.offsetTop + this.input.offsetHeight + "px";
                this.node_Div.style.width = this.input.offsetWidth - 2 + "px";
            },

            deleteDiv: function ()
            {
                while (this.node_Div.hasChildNodes())
                {
                    this.node_Div.removeChild(this.node_Div.firstChild);
                }
                this.node_Div.className = "auto_hidden";
            },

            setValue: function (object)
            {
                return function ()
                {
                    object.input.value = this.seq;
                    object.node_Div.className = "auto_hidden";
                }
            },

            autoOnmouseover: function (object, index_div)
            {
                return function ()
                {
                    var length;
                    object.index = index_div;
                    length = object.node_Div.children.length;
                    for (var i = 0; i < length; i++)
                    {
                        if (i != object.index)
                        {
                            object.node_Div.childNodes[i].className = 'auto_onmouseout';
                        }
                        else
                        {
                            object.node_Div.childNodes[i].className = 'auto_onmouseover';
                        }
                    }
                }
            },

            nameChanged: function (length)
            {
                for (var i = 0; i < length; i++)
                {
                    if (i != this.index)
                    {
                        this.node_Div.childNodes[i].className = 'auto_onmouseout';
                    }
                    else
                    {
                        this.node_Div.childNodes[i].className = 'auto_onmouseover';
                        this.input.value = this.node_Div.childNodes[i].seq;
                    }
                }
            }
            ,

            pressKey: function (event)
            {
                var length = this.node_Div.children.length;
                //"↓"
                if (event.keyCode == 40)
                {
                    ++this.index;
                    if (this.index > length)
                    {
                        this.index = 0;
                    }
                    else if (this.index == length)
                    {
                        this.input.value = this.searchValue;
                    }
                    this.nameChanged(length);
                }
                //"↑"
                else if (event.keyCode == 38)
                {
                    this.index--;
                    if (this.index < -1)
                    {
                        this.index = length - 1;
                    }
                    else if (this.index == -1)
                    {
                        this.input.value = this.searchValue;
                    }
                    this.nameChanged(length);
                }
                //enter
                else if (event.keyCode == 13)
                {
                    this.node_Div.className = "auto_hidden";
                    this.index = -1;
                }
                else
                {
                    this.index = -1;
                }
            },

            start: function (event)
            {
                if (event.keyCode == 8) {
                    this.initialize();
                    this.deleteDiv();
                }
                else if (event.keyCode != 13 && event.keyCode != 38 && event.keyCode != 40)
                {
                    this.initialize();
                    this.deleteDiv();
                    this.searchValue = this.input.value;

                    var arrV = [""];
                    $('.firstNamesList').find('.firstName').each(
                        function () {
                            var theText = $(this).text().toLowerCase();
                            var searchedText = $('.searchFirstName').val().toLowerCase();

                            if (theText.match("^" + searchedText)) {
                                var capFirst = theText.charAt(0).toUpperCase()
                                theText = capFirst + theText.substr(1, theText.length);
                                arrV.push(theText);
                            }
                        });
                    if (arrV != undefined && arrV != null)
                    {

                        arrV.sort();
                    }

                    if (this.input.value.replace(/(^\s*)|(\s*$)/g, '') == "") { return; }
                    try { var reg = new RegExp("(" + this.input.value + ")", "i"); }
                    catch (e) { return; }
                    var index = 0;
                    for (var i = 0; i < arrV.length; i++)
                    {
                        if (reg.test(arrV[i]))
                        {
                            var div = document.createElement("div");
                            div.className = "auto_onmouseout";
                            div.seq = arrV[i];
                            div.onclick = this.setValue(this);
                            $(div).click(function () {
                                Search();
                            })
                            div.onmouseover = this.autoOnmouseover(this, index);
                            div.innerHTML = arrV[i].replace(reg, "<strong>$1</strong>");
                            this.node_Div.appendChild(div);
                            this.node_Div.className = "auto_show";
                            index++;
                        }
                    }
                }
                this.pressKey(event);
                window.onresize = combine(this, function () { this.initialize(); });
            },
            startLast: function (event)
            {
                if (event.keyCode == 8) {
                    this.initialize();
                    this.deleteDiv();
                }
                else if (event.keyCode != 13 && event.keyCode != 38 && event.keyCode != 40)
                {
                    this.initialize();
                    this.deleteDiv();
                    this.searchValue = this.input.value;

                    var arrV = [""];
                    $('.lastNamesList').find('.lastName').each(
                        function () {
                            var theText = $(this).text().toLowerCase();
                            var searchedText = $('.searchLastName').val().toLowerCase();

                            if (theText.match("^" + searchedText)) {
                                var capFirst = theText.charAt(0).toUpperCase()
                                theText = capFirst + theText.substr(1, theText.length);
                                arrV.push(theText);
                            }
                        });
                    if (arrV != undefined && arrV != null)
                    {

                        arrV.sort();
                    }

                    if (this.input.value.replace(/(^\s*)|(\s*$)/g, '') == "") { return; }
                    try { var reg = new RegExp("(" + this.input.value + ")", "i"); }
                    catch (e) { return; }
                    var index = 0;
                    for (var i = 0; i < arrV.length; i++)
                    {
                        if (reg.test(arrV[i]))
                        {
                            var div = document.createElement("div");
                            div.className = "auto_onmouseout";
                            div.seq = arrV[i];
                            div.onclick = this.setValue(this);
                            $(div).click(function () {
                                Search();
                            })
                            div.onmouseover = this.autoOnmouseover(this, index);
                            div.innerHTML = arrV[i].replace(reg, "<strong>$1</strong>");
                            this.node_Div.appendChild(div);
                            this.node_Div.className = "auto_show";
                            index++;
                        }
                    }
                }
                this.pressKey(event);
                window.onresize = combine(this, function () { this.initialize(); });
            }
		}

        function deleteTemplate() {
            var dataPost = $("input[class='selecter']:checked").val();
            $.ajax({
                url: '/Search/DeleteTemplate',
                type: 'POST',
                data: JSON.stringify(dataPost),
                contentType: 'application/json; charset=utf-8',
                error: function (xhr) {
                    alert('Error: ' + xhr.statusText);
                },
                success: function (result) {
					returnedData = JSON.parse(result);
					location.reload();
                },
                async: true,
                processData: false
            });
        }

            /**/</script>
</head>


<body class="organize">
    <div class="checkedIdsDiv" style="display:none;">
        <p class="checkedIdTemplate"></p>
    </div>
    <div class="firstNamesList" style="display:none;">
        <p class="firstNameTemplate"></p>
    </div>
    <div class="lastNamesList" style="display:none;">
        <p class="lastNameTemplate"></p>
    </div>
    <div id="mainWindow">
        <div style="width: 80%; margin-left: 10%;" align="right">
                <div class="flex-container">
                    <div class="sidebar-left">
                        <a>First Name</a><br />
                        <input class="customInput yellowizedTextField searchFirstName" id="search_FirstName" property="firstNameBeginText" type="text" onKeyUp="Search(),autoComplete.start(event)" placeholder="First Name" style="width:100%">
                        <div class="auto_hidden" id="auto"></div>
                        <script>
                            var autoComplete = new AutoComplete('search_FirstName', 'auto', {});//returnedData caused sort, event error
                        </script>
                    </div>
                    <div class="sidebar-middle">
                        <a>Last Name</a><br />
                        <input class="customInput yellowizedTextField searchLastName" id="search_LastName" type="text" property="lastNameBeginText" onKeyUp="Search(),autoCompleteLast.startLast(event)" placeholder="Last Name" style="width:100%">
                        <div class="auto_hidden" id="autoLastName"></div>
                        <script>
                            var autoCompleteLast = new AutoComplete('search_LastName', 'autoLastName', {});//returnedData caused sort, event error
                        </script>
                    </div>

                    <div class="sidebar-right">
                        <a>Organization Type</a><br /><selection>
                            <select multiple id="myMulti" onmousedown="javascript:return false;" class="searchOrganization" name="category" size="1" style="width:100%">
                                <!--We need to keep an empty option to allow searches that do not include organization-->
                                <option value="business">Business</option>
                                <option value="electedOfficial">Elected Official</option>
                                <option value="educationAll">Education - All</option>
                                <option value="elementary">Elementary School</option>
                                <option value="middle">Middle School</option>
                                <option value="highSchool">High School</option>
                                <option value="higherEd">Higher Education</option>
                                <option value="nonProfit">Non-profit</option>
                                <option value="UWSystem">UW-System</option>
                                <option value="boardOfRegent">Board of Regent</option>
                                <option value="advancement">Advancement & Alumni</option>
                                <option value="government">Government</option>
                                <option value="other">Other</option>
                            </select>

                            <script src="js/index.js"></script>
                        </selection>
                    </div>

                </div>
            <div style="float:left; display: flex; width: 100%">
                <div style="display: flex; width: 25%">
                    <p style="float:left;">Display Inactive: </p>
                    <input style="margin-left:12px; margin-top:12px;" type="checkbox" onchange="Search()" class="yellowizedTextField displayOnlyActiveClientsInput" />
                </div>
                <div style="display: flex; width: 25%">
                    <p style="float:left;">Has Permit: </p>
                    <input style="margin-left:12px; margin-top:12px;" type="checkbox" onchange="Search()" class="yellowizedTextField displayOnlyHasPermit" />
                </div>
                <div style="display: flex; width: 25%">
                    <p style="float:left;">Holiday Card Recipient: </p>
                    <input style="margin-left:12px; margin-top:12px;" type="checkbox" onchange="Search()" class="yellowizedTextField displayOnlyHolidayCard" />
                </div>
                <div style="display: flex; width: 25%">
                    <p style="float:left;">Community Breakfast Attendee: </p>
                    <input style="margin-left:12px; margin-top:12px;" type="checkbox" onchange="Search()" class="yellowizedTextField displayOnlyHBreakfastAttendee" />
                </div>
            </div>
        </div>
        <div class="flex-select">
            <a href="javascript:allCheck('choice',true)" onclick="selectAll()" class="yellowizedSelect">Select all</a>
            <a href="javascript:allCheck('choice',false)" onclick="unselectAll()" class="yellowizedSelect">No select</a>
        </div>
        <div class="flex-view">
            <p></p>
        </div>
        <div class="flex-colum">
            <p><b>First Name</b></p>
        </div>
        <div class="flex-colum">
            <p><b>Last Name</b></p>
        </div>
        <div class="flex-colum">
            <p><b>Job Title</b></p>
        </div>
        <div class="flex-colum">
            <p><b>Organization Name</b></p>
        </div>
        <div class="flex-colum">
            <p><b>Email</b></p>
        </div>
        <div class="flex-colum">
            <p><b>Phone #</b></p>
        </div>

        <div class="searchResult" align="right">
            <table class="templateTable" cellpadding="0px">
                <tbody style="width:100%">
                    <tr class="templateRow" style="width:100%">
                        <td style="overflow:hidden;">
                            <button class="yellowizedButton rowViewButton dataCell" value="0">View</button>
                        </td>
                        <td style="overflow:hidden;">
                            <input class="yellowizedTextField rowFirstName dataCell" type="text" value="" disabled>
                        </td>
                        <td style="overflow:hidden;">
                            <input class="yellowizedTextField rowLastName dataCell" type="text" value="" disabled>
                        </td>
                        <td style="overflow:hidden;">
                            <select class="yellowizedTextField rowJobTitle dataCell">
							</select>
                        </td>
                        <td style="overflow:hidden;">
							<select class="yellowizedTextField rowOrganization dataCell">
							</select>
                        </td>
                        <td style="overflow:hidden;">
                            <input class="yellowizedTextField rowEmailAddress dataCell" type="text" value="" disabled>
                        </td>
                        <td>
                            <input class="yellowizedTextField rowPhoneNumber dataCell" type="text" value="" disabled>
                        </td>
                        <td>
                            <input class="rowSelected selectionCell" type="checkbox" name="choice" id="choice" />
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div style="width: 100%; margin-top: 5px;">
            <button class="yellowizedButton template" onclick="popSetup(); LoadTemplates();">Select Template</button>
            <button style="margin-left: 20%" class="yellowizedButton excel" onclick="Export()">Export to Excel</button>
        </div>

        <!-- #region Popup Template Windows -->

        <div class="setup" id="setup">
            <!--
         <div class="topRow">
           <img src="superior_logo.jpg" style="max-height: 100%">
           <img src="logo.jpg" style="max-height: 100%">
         </div>
        -->
            <div class="searchRow">
                <div>
                    <input type="text" id="searchTemplateField" class="templateSearch" style="width: 80%">
                    <input type="button" id="searchTemplateButton" value="search" onclick="searchTemplates()" style="width: 15%">
                </div>
            </div>
            <div class="resultRow" style="width:80%;">
                <table style="min-width:100%;" id="poptable" class="templatePopupTable scrollTable" >
                    <tr class="scrollTh">
                        <th>&nbsp;</th>
                        <th>Name</th>
                        <th>Date modified</th>
                    </tr>
                    <tr class="templateRowTemplate scrollTd">
                        <td style="min-width:20%" id="radioSet" class="radio"><input class="selecter" type="radio" name="fileName" value=""></td>
                        <td style="min-width:40%" id="colSet" class="rowTemplateName"></td>
                        <td style="min-width:40%" id="colSet" class="rowTemplateDate"></td>
                    </tr>
                </table>
            </div>
            <div class="buttonRow">
                <button class="yellowizedButton continue" onclick="popConfirm()">Continue</button>
            </div>
            <div class="buttonRow">
                <form asp-controller="Search" asp-action="UploadFile" enctype="multipart/form-data" method="post" class="fileSelecterButton" role="form">
                    <input type="file" class="browse fileSelecterButton" name="file" style="width: 500px;">
                    <button type="submit" value="Upload Small File" class="yellowizedButton addTemplate" id="UploadSmallFile">Upload File</button>
                </form>
                <input type="button" class="deleteTemplate" style="width: 500px;" onclick="deleteTemplate()" value="Delete Template"/>
                <input class="yellowizedButton closeButton" onclick="closeSetup()" value="Close">
            </div>
        </div>

        <div class="confirmation" id="confirmation">
            <!--
         <div class="topRow">
           <img src="superior_logo.jpg" style="max-height: 100%">
           <img src="logo.jpg" style="max-height: 100%">
         </div>
        -->
            <div class="resultRow">
                <table id="poptable">
                    <tr>
                        <th>Result</th>
                    </tr>
                    <tr>
                        <td id="colSet" class="returnedResults"></td>
                    </tr>
                </table>
            </div>
            <div class="buttonRow">

                <button type="submit" class="yellowizedButton continue" onclick="TemplateMerge()">Generate Output</button>

            </div>
            <div class="buttonRow">
                <button class="yellowizedButton goBack" style="float:left; margin-left:30px;" onclick="closeConfirm()">Go Back</button>
                <button class="yellowizedButton closeButton" onclick="closeConfirm(), closeSetup()">Return to Search</button>
            </div>
        </div>

        <!-- #endregion -->

    </div>
</body>
</html>
