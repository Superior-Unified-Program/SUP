@model SUP_MVC.Models.AddClient.AddClientViewModel

@{
    ViewData["Title"] = "AddClient";
}
   
    <head>
        <meta charset="utf-8">
        <title>Search</title>
        <style>
			.removableRow {
				height: 35px;
			}

			.templateRow {
				height: 35px;
			}

			.orgTable {
				height: 85px;
				overflow-y: scroll;
				overflow-x: auto;
				left: 0;
				width: 100%;
			}

            .popup {
                display: none;
                flex-wrap: nowrap;
                overflow: auto;
                background-color: #E0E0E0;
                border: 1px solid black;
                position: fixed;
                bottom: 40%;
                top: 40%;
                left: 40%;
                width: 20%;
                height: 12vw;
                flex-direction: column;
            }

            .confirmButton {
                margin-left: auto;
                margin-right: auto;
                width: 40%;
                height: 100%;
                margin-bottom: 5%;
            }

            .popupButtonsDiv {
                position: relative;
                margin-left: auto;
                margin-right: auto;
                margin-top: 30%;
                margin-bottom: auto;
                width: 80%;
                height: 15%;
            }

                .popupButtonsDiv input {
                    font-size: 0.75vw;
                }

            .popupMessageDiv {
                position: relative;
                margin-left: auto;
                margin-right: auto;
                margin-top: 0px;
                margin-bottom: auto;
                width: 80%;
                height: 10%;
            }

                .popupMessageDiv p {
                    font-size: 1vw;
                }

            .tableHeader {
                width: 100%;
                text-align: center;
                font-size: large;
                font-weight: 900;
                margin-left: -50px;
                height: 45px;
                padding-top: 12px;
            }

            .row {
                width: 100%;
            }

            @@media (max-width:600px) {
                .cell {
                    flex: 100%;
                    max-width: 100%;
                }
            }

            .cell {
                width: 25%;
                text-align: left;
                overflow: hidden;
            }

			.shortCell {
				width: 25%;
				height: 30px;
                text-align: left;
                overflow: hidden;
			}

            .noteCell {
                width: 75%;
                text-align: left;
                overflow: hidden;
            }

            .cellMini {
                width: 8%;
                text-align: left;
            }

            .saveEditCell {
                width: 25%;
                padding-left: 50px;
                margin: 20px 0px 0px 0px;
                vertical-align: bottom;
                padding-right: 20px;
            }

            textarea {
                width: calc(100% - 50px - 35px);
            }

            .breakLine {
                margin-left: -10%;
                padding-top: 0px;
                padding-top: 0px;
                margin-top: 5px;
                margin-bottom: 0px;
            }

            .yellowizedButton {
                box-shadow: inset 0px 1px 0px 0px #fcf6cf;
                background: linear-gradient(to bottom, #edf035 5%, #d1c060 100%);
                background-color: #edf035;
                border: 1px solid #241e19;
                display: inline-block;
                cursor: pointer;
                color: #2e1813;
                font-family: Arial;
                font-size: 13px;
                font-weight: bold;
                padding: 6px 12px;
                text-decoration: none;
            }

                .yellowizedButton:hover {
                    background: linear-gradient(to bottom, #d1c060 5%, #edf035 100%);
                    background-color: #d1c060;
                }
        </style>
        <link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Raleway'>
        <link rel='stylesheet' href='https://fonts.googleapis.com/icon?family=Material+Icons'>

        <link rel="stylesheet" href="~/css/style.css">
        <script language="javascript">

            function toggleEdit() {
                $("input[type='text']").each(function () {
                    if ($(this).prop('disabled') == true) {
                        $(this).prop('disabled', false);
                        $(".saveButton").prop('value', "Save");
                        $(".saveButton").unbind('click').click(function () {
                            saveClientData();
                        });
                    }
                    else {
                        $(this).prop('disabled', true);
                        $(".saveButton").prop('value', "Edit");
                        $(".saveButton").unbind('click').click(function () {
                            toggleEdit();
                        });
                    }
                });
                $(".activeInput").each(function () {
                    if ($(this).prop('disabled') == true) {
                        $(this).prop('disabled', false);
                    }
                    else {
                        $(this).prop('disabled', true);
                    }
                });
                $(".cardRecipientInput").each(function () {
                    if ($(this).prop('disabled') == true) {
                        $(this).prop('disabled', false);
                    }
                    else {
                        $(this).prop('disabled', true);
                    }
                });
                $(".breakfastAttendee").each(function () {
                    if ($(this).prop('disabled') == true) {
                        $(this).prop('disabled', false);
                    }
                    else {
                        $(this).prop('disabled', true);
                    }
                });
                $("textarea").each(function () {
                    if ($(this).prop('disabled') == true) {
                        $(this).prop('disabled', false);
                    }
                    else {
                        $(this).prop('disabled', true);
                    }
                });
                $("select").each(function () {
                    if ($(this).prop('disabled') == true) {
                        $(this).prop('disabled', false);
                    }
                    else {
                        $(this).prop('disabled', true);
                    }
				});
				$(".removeOrgButton").each(function () {
					if ($(this).prop('disabled') == true) {
                        $(this).prop('disabled', false);
                    }
                    else {
                        $(this).prop('disabled', true);
                    }
				});
				$(".addOrgButton").each(function () {
					if ($(this).prop('disabled') == true) {
                        $(this).prop('disabled', false);
                    }
                    else {
                        $(this).prop('disabled', true);
                    }
				});
            }
            setTimeout(function () {
                if (getClientIdFromURL()) {
                    toggleEdit();
                }
            }, 100);

            function check() {
                var email = document.getElementbyid("email");
                if (!email.checkValidity())
                    email.setCustomvalidity("Please enter the right email format!");
            }

            function getClientIdFromURL() {
                var args = location.href.split('?');
                var params = "";
                if (args.length > 1) {
                    params = args[1].split('=');
                }
                var clientId = "";
                if (params.length > 1) {
                    clientId = params[1];
                }

                if (clientId != "") {
                    loadClientData(clientId);
                    return true;
                }
                $(".saveButton").unbind('click').click(function () {
                    //saveClientData();
                    checkForNearMatch();
                });
                return false;
            }

            function selectElement(id, valueToSelect) {
                let element = document.getElementById(id);
                element.value = valueToSelect;
            }

            function loadClientData(clientId) {
                var dataPost = clientId;
                $.ajax({
                    url: '/AddClient/GetClient',
                    type: 'POST',
                    data: JSON.stringify(dataPost),
                    contentType: 'application/json; charset=utf-8',
                    error: function (xhr) {
                        alert('Error: ' + xhr.statusText);
                    },
                    success: function (result) {
                        var returnedData = JSON.parse(result);
                        var currentClient = returnedData;
                        var firstName = currentClient["First_Name"];
                        var lastName = currentClient["Last_Name"];
                        var assistantsFirstName = currentClient["Assistant_First_Name"];
                        var assistantsLastName = currentClient["Assistant_Last_Name"];
                        var middleinitial = currentClient["Middle_initial"];
                        var prefix = currentClient["Prefix"];
                        var organization = currentClient["Org"];
                        var permit = currentClient["Permit_Num"];
                        if (currentClient['Email'] != null) {
                            console.log($('.personalEmailInput').val(currentClient['Email']['Personal_Email']))
                            $('.personalEmailInput').val(currentClient['Email']['Personal_Email']);
                        }
                        if (currentClient['Email'] != null) {
                            $('.businessEmailInput').val(currentClient['Email']['Business_Email']);
                        }
                        if (currentClient['Email'] != null) {
                            $('.assistantEmailInput').val(currentClient['Email']['Assistant_Email']);
                        }
                        if (currentClient['Phone'] != null) {
                            $('.businessPhoneInput').val(currentClient['Phone']['Business_Phone']);
                        }
                        if (currentClient['Phone'] != null) {
                            $('.personalPhoneInput').val(currentClient['Phone']['Personal_Phone']);
                        }
                        if (currentClient['Phone'] != null) {
                            $('.assistantPhoneInput').val(currentClient['Phone']['Assistant_Phone']);
						}
                        if (currentClient['Org'] != null) {
                            var orgTypeText = currentClient['Org']['Org_Type'];
                            $(".primaryOrganizationInput option").filter(function () {
                                return this.text == orgTypeText;
                            }).attr('selected', true);
                            //$('.organizationInput').text(currentClient['Org']['Org_Type']);
						}
                        if (currentClient['Org'] != null) {
                            $('.companyInput').val(currentClient['Org']['Org_Name']);
                        }
                        if (currentClient['Org'] != null) {
                            $('.titleInput').val(currentClient['Org']['Title']);
						}
						var organizationList = currentClient['Organizations']
						for (var i = 0; i < organizationList.length; i++) {
							if (organizationList[i]['Primary'] == false) {
								var Row = $('.templateRow').clone();
								Row.removeClass('templateRow').addClass('removableRow');
								Row.find('.companyInput').val(organizationList[i]['Org_Name']);
								Row.find('.titleInput').val(organizationList[i]['Title']);
								Row.find('.primaryOrganizationInput').removeClass('primaryOrganizationInput').addClass('organizationInput');
								Row.find('.organizationInput option').filter(function () {
									return this.text == organizationList[i]['Org_Type'];
								}).attr('selected', true);
								Row.children().find('.removeOrgButton').css('visibility', 'visible');
								Row.children().find('.primaryLabel').remove();
								$('.templateRow').parent().append(Row);
							}
						}
                        if (currentClient['Address'] != null) {
                            $('.addressLineOneInput').val(currentClient['Address']['Line1']);
                        }
                        if (currentClient['Address'] != null) {
                            $('.addressLineTwoInput').val(currentClient['Address']['Line2']);
                        }
                        if (currentClient['Address'] != null) {
                            $('.cityInput').val(currentClient['Address']['City']);
                        }
                        if (currentClient['Address'] != null) {
                            $('.stateInput').val(currentClient['Address']['State']);
                        }
                        if (currentClient['Address'] != null) {
                            $('.zipInput').val(currentClient['Address']['Zip']);
                        }
                        var company = currentClient["Company"];
                        var isActive = currentClient["Active"];
                        var cardRecipient = currentClient["Holiday_Card"];
                        var breakfastAttendee = currentClient["Community_Breakfast"];
                        var note = currentClient["Notes"];
                        $('.firstNameInput').val(firstName);
                        $('.middleInitialInput').val(middleinitial);
                        $('.lastNameInput').val(lastName);
                        $('.assistantFirstNameInput').val(assistantsFirstName);
                        $('.assistantLastNameInput').val(assistantsLastName);
                        $('.prefixInput').val(prefix);
                        $('.permitInput').val(permit);

                        //selectElement('leaveCode', '11')


                        if (isActive) {
                            $(".activeInput").prop("checked", true);
                        }

                        if (cardRecipient) {
                            $(".cardRecipientInput").prop("checked", true);
                        }

                        if (breakfastAttendee) {
                            $(".breakfastAttendee").prop("checked", true);
                        }

                        $('.noteInput').val(note);
                    },
                    async: true,
                    processData: false
                });
            }

            function editClient(clientId) {
                location.href = '/AddClient/AddClient?clientId=' + clientId;
            }

            function saveClientData(id) {
                var clientId = "";
                if (id) { clientId = id }
                else {
                    var args = location.href.split('?');
                    var params = "";
                    if (args.length > 1) {
                        params = args[1].split('=');
                    }
                    if (params.length > 1) {
                        clientId = params[1];
                    }
                }
                var prefix = $('.prefixInput').val();
                var firstName = $('.firstNameInput').val();
                var lastName = $('.lastNameInput').val();
				var middleInitial = $('.middleInitialInput').val();

                var primaryCompany = $('.companyInput').val();
                var primaryOrganization = $(".primaryOrganizationInput option:selected").text();
				var primaryTitle = $('.titleInput').val();

				var additionalOrganizations = "";
				$('.removableRow').each(function () {
					var company = $(this).find('.companyInput').val();
					var organization = $(this).find('.organizationInput option:selected').text();
					var title = $(this).find('.titleInput').val();
					additionalOrganizations += organization + ";" + company + ";" + title + "|";
				});

                var Line1 = $('.addressLineOneInput').val();
                var Line2 = $('.addressLineTwoInput').val();
                var City = $('.cityInput').val();
                var State = $('.stateInput').val();
                var Zip = $('.zipInput').val();
                //var Email = $('.emailInput').val();

                var PersonalEmail = $('.personalEmailInput').val();
                var BusinessEmail = $('.businessEmailInput').val();
                var AssistantEmail = $('.assistantEmailInput').val();
                var PersonalPhone = $('.personalPhoneInput').val();
                var BusinessPhone = $('.businessPhoneInput').val();
                var AssistantPhone = $('.assistantPhoneInput').val();

                var AssistantLastName = $('.assistantLastNameInput').val();
                var AssistantFirstName = $('.assistantFirstNameInput').val();

                var Note = $('.noteInput').val();
                //var Phone = $(".phoneInput").val();
                var Active = $(".activeInput").prop("checked");

                var BreakfastAttendee = $(".breakfastAttendee").prop("checked");
                var HolidayCardRecipient = $(".cardRecipientInput").prop("checked");

                var Permit = $(".permitInput").val();

                var successString = (clientId == "") ? 'Client successfully added.' : 'Client successfully updated.';

                var dataPost = clientId + ',' + firstName + ',' + lastName + ',' + middleInitial + ',' +
                    primaryOrganization + ',' + primaryCompany + ',' + primaryTitle +
                    ',' + Line1 + ',' + Line2 + ',' + City + ',' + State + ',' + Zip +
                    ',' + PersonalEmail + ',' + Note + ',' + PersonalPhone + ',' + Active + ',' + Permit + ',' +
					BreakfastAttendee + ',' + HolidayCardRecipient + ',' + BusinessEmail + ',' + BusinessPhone + ',' +
					AssistantEmail + ',' + AssistantPhone + ',' + AssistantFirstName + ',' + AssistantLastName + ',' + prefix + "," + additionalOrganizations;
                $.ajax({
                    url: '/AddClient/UpdateClient',
                    type: 'POST',
                    data: JSON.stringify(dataPost),
                    contentType: 'application/json; charset=utf-8',
                    error: function (xhr) {
                        alert('Error: ' + xhr.statusText);
                    },
                    success: function (result) {
                        alert(successString);
                        editClient(result);
                    },
                    async: true,
                    processData: false
                });
            }

            function popupAlert(message) {
                document.getElementById("messagePopup").style.display = "flex";
                $('.popupMessage').text(message);
            }

            function closePopupAlert() {
                document.getElementById("messagePopup").style.display = "none";
            }

            function checkForNearMatch() {
                var firstName = $('.firstNameInput').val();
                var lastName = $('.lastNameInput').val();
                var dataPost = firstName + ',' + lastName;
                $.ajax({
                    url: '/AddClient/CheckForNearMatch',
                    type: 'POST',
                    data: JSON.stringify(dataPost),
                    contentType: 'application/json; charset=utf-8',
                    error: function (xhr) {
                        alert('Error: ' + xhr.statusText);
                    },
                    success: function (result) {
                        returnedData = JSON.parse(result);
                        $('.returnedMatch').remove();
                        for (var i = 0; i < returnedData.length; i++) {
                            var returnedFirstName = returnedData[i]['First_Name'];
                            var returnedLastName = returnedData[i]['Last_Name'];
                            var returnedID = returnedData[i]['ID'];
                            var message = "The name you entered is very similar to another client named " + returnedFirstName + " " + returnedLastName + " within the system. Would you like to update this client instead?";

                            var Row = $('.returnedMatchTemplate').clone();
                            Row.removeClass('returnedMatchTemplate').addClass('returnedMatch');
                            Row.text(message);
                            Row.attr("clientID", returnedID);
                            $('.returnedMatchesDiv').append(Row);
                        }
                        if ($('.returnedMatch').length) {
                            popMatchFound();
                            var p = $('.returnedMatch').first();
                            var msg = p.text();
                            var ID = p.attr('clientID');
                            $('.matchMessage').text(msg);
                            $('.popupButtonsDiv').attr('currentID', ID);
                        }
                        else {
                            saveClientData();
                        }
                    },
                    async: true,
                    processData: false
                });
            }

            function notMatch() {
                $('.returnedMatch').first().remove();
                var p = $('.returnedMatch');
                if (p.length) {
                    var first = p.first();
                    var msg = first.text();
                    var ID = first.attr('clientID');
                    $('.matchMessage').text(msg);
                    $('.popupButtonsDiv').attr('currentID', ID);
                }
                else {
                    document.getElementById("matchFoundPopup").style.display = "none";
                    saveClientData();
                }
            }

            function isMatch() {
                clientID = $('.popupButtonsDiv').attr('currentID');
                document.getElementById("matchFoundPopup").style.display = "none";
                saveClientData(clientID);
            }

            function popMatchFound() {
                document.getElementById("matchFoundPopup").style.display = "flex";
            }

			function addOrg() {
				var table = document.getElementById("OrgTable");
				var rowlen = table.rows.length + 1;
				var row = table.insertRow(rowlen);
				row.id = "rowOrg_" + rowlen;
				var arr = ['textboxfiledname'];
				for (i = 0; i < 2; i++) {
					var x = row.insertCell(i)
					if (i == 1) {
						x.innerHTML = "<input type='button' onclick='removeCell(" + row.id + ")' value=Delete>"
					}
					else {
						x.innerHTML = "<label>" + arr[i] + ":</label><input type='text' name='" + arr[i] + "'>"
					}
				}
			}
			function removeOrg(rowid) {
				var table = document.getElementById(rowid).remove();
			}

			function addOrganization() {
				var Row = $('.templateRow').clone();
				Row.removeClass('templateRow').addClass('removableRow');
				Row.children().find('.removeOrgButton').css('visibility', 'visible');
				Row.children().find('.primaryLabel').remove();
				Row.children().find('.companyInput').val("");
				Row.children().find('.titleInput').val("");
				Row.find('.primaryOrganizationInput').removeClass('primaryOrganizationInput').addClass('organizationInput');
				$('.templateRow').parent().append(Row);
			}

			function removeOrganization() {
				event.target.parentNode.parentNode.parentNode.removeChild(event.target.parentNode.parentNode);
			}

        </script>

        <script src="~/lib/jquery/dist/jquery.min.js"></script>
    </head>

<body>
	<div class="returnedMatchesDiv" style="display:none">
		<p class="returnedMatchTemplate"></p>
	</div>
	<div style="position: absolute; left: 15%; top: 10%; width: 85%;">
		<form action="" method="get" id="client_info" onchange="submitForm();" onsubmit="return check()">
			<div style="margin-left: 10%; width: 80%; height: 100%; top: 0; left: 0; border-collapse: collapse;">
				<div class="tableHeader">Client Information</div>
				<div class="row">
					<div class="cell">Prefix<br /><input class="prefixInput" type="text" placeholder="" style="width: 45px" tabindex="1"></div>
					<div class="cell">First Name*<br /><input type="text" class="firstNameInput" placeholder="First Name" required tabindex="2"></div>
					<div class="cell">Last Name*<br /><input type="text" class="lastNameInput" placeholder="Last Name" required tabindex="3"></div>
					<div class="cell">Middle Initial<br /><input type="text" class="middleInitialInput" placeholder="MI" style="width: 35px" tabindex="4"></div>
				</div>
				<hr class="breakLine" />

                <!-- #region Multi-Organization Container-->

				<div>

					<!--
	   <input type="button" class="yellowizedButton" value="Delete Organization" id="deleteOrgButton()" onclick="removeOrg" style="padding-top: 5px; padding-left: 25px;">

	-->
					<div class="row" style="height: 22px; padding-bottom: 5px;">
						<div class="cell">Organization Type</div>
						<div class="cell">Company name</div>
						<div class="cell">Job title</div>
					</div>
					<div class="orgTable">
						<div class="templateRow row">
							<div class="shortCell">
								<select id="organizationInput" name="Organization" class="primaryOrganizationInput" size="1" tabindex="5">
									<option value=""></option>
									<option value="business">Business</option>
									<option value="electedOfficial">Elected Official</option>
									<option value="educationAll">Education - All</option>
									<option value="elementary">Elementary School</option>
									<option value="middle">Middle School</option>
									<option value="highSchool">High School</option>
									<option value="higherEd">Higher Education</option>
									<option value="nonProfit">Non-profit</option>
									<option value="UWSystem">UW-System</option>
									<option value="boardOfRegent">Board of Regent</option>
									<option value="advancement">Advancement & Alumni</option>
									<option value="government">Government</option>
									<option value="other">Other</option>
								</select>
							</div>
							<div class="shortCell"><input type="text" class="companyInput" tabindex="6"></div>
							<div class="shortCell"><input type="text" class="titleInput" tabindex="7"></div>
							<div class="shortCell"><span class="primaryLabel">Primary Organization</span><input type="button" class="yellowizedButton removeOrgButton" value="Remove Orgainization" id="addOrg" onclick="removeOrganization()" style="padding-top: 2px; padding-left: 25px; margin-top:0px; visibility: hidden;"></div>
						</div>
					</div>
					<div class="row">
						<div class="cell"></div>
						<div class="cell"></div>
						<div class="cell"></div>
						<div class="cell"><input type="button" class="yellowizedButton addOrgButton" value="Add Organization" id="addOrg" onclick="addOrganization()" style="margin-top: 5px; padding-top: 5px; padding-left: 25px; float:left;"></div>
					</div>

					<hr class="breakLine" />

					<!-- #endregion -->

					<div class="tableHeader">Contact Information</div>
					<div class="row">
						<div class="cell">Address Line1<br /><input class="addressLineOneInput" type="text" placeholder="Address Line 1" tabindex="8"></div>
						<div class="cell">City<br /><input class="cityInput" type="text" placeholder="City" tabindex="10"></div>
						<div class="cell">
							State<br /><select class="stateInput" name="state" tabindex="11">
								<option value=""></option>
								<option value="AL">Alabama</option>
								<option value="AK">Alaska</option>
								<option value="AZ">Arizona</option>
								<option value="AR">Arkansas</option>
								<option value="CA">California</option>
								<option value="CO">Colorado</option>
								<option value="CT">Connecticut</option>
								<option value="DE">Delaware</option>
								<option value="DC">District Of Columbia</option>
								<option value="FL">Florida</option>
								<option value="GA">Georgia</option>
								<option value="HI">Hawaii</option>
								<option value="ID">Idaho</option>
								<option value="IL">Illinois</option>
								<option value="IN">Indiana</option>
								<option value="IA">Iowa</option>
								<option value="KS">Kansas</option>
								<option value="KY">Kentucky</option>
								<option value="LA">Louisiana</option>
								<option value="ME">Maine</option>
								<option value="MD">Maryland</option>
								<option value="MA">Massachusetts</option>
								<option value="MI">Michigan</option>
								<option value="MN">Minnesota</option>
								<option value="MS">Mississippi</option>
								<option value="MO">Missouri</option>
								<option value="MT">Montana</option>
								<option value="NE">Nebraska</option>
								<option value="NV">Nevada</option>
								<option value="NH">New Hampshire</option>
								<option value="NJ">New Jersey</option>
								<option value="NM">New Mexico</option>
								<option value="NY">New York</option>
								<option value="NC">North Carolina</option>
								<option value="ND">North Dakota</option>
								<option value="OH">Ohio</option>
								<option value="OK">Oklahoma</option>
								<option value="OR">Oregon</option>
								<option value="PA">Pennsylvania</option>
								<option value="RI">Rhode Island</option>
								<option value="SC">South Carolina</option>
								<option value="SD">South Dakota</option>
								<option value="TN">Tennessee</option>
								<option value="TX">Texas</option>
								<option value="UT">Utah</option>
								<option value="VT">Vermont</option>
								<option value="VA">Virginia</option>
								<option value="WA">Washington</option>
								<option value="WV">West Virginia</option>
								<option value="WI">Wisconsin</option>
								<option value="WY">Wyoming</option>
							</select>
						</div>
						<div class="cell">Zipcode <br /><input class="zipInput" type="text" placeholder="Zip Code" rquired pattern="[0-9 -]{5,10}" tabindex="12"></div>
					</div>
					<div class="row">
						<div class="cell">Address Line2<br /><input class="addressLineTwoInput" type="text" placeholder="Address Line 2" tabindex="9"></div>
					</div>
					<hr class="breakLine" />
					<div class="row">
						<div class="cell">Personal Email address<br /><input class="personalEmailInput" type="text" id="email" placeholder="Email" tabindex="14"></div>
						<div class="cell">Personal Phone Number<br /><input class="personalPhoneInput" type="text" placeholder="" pattern="[0-9 -]{12}" tabindex="15"></div>
						<div class="cell">Business Email address<br /><input class="businessEmailInput" type="text" id="email" placeholder="Email" tabindex="16"></div>
						<div class="cell">Business Phone Number<br /><input class="businessPhoneInput" type="text" placeholder="" pattern="[0-9 -]{12}" tabindex="17"></div>
					</div>
					<div class="tableHeader">Assistant's Information</div>
					<div class="row">
						<div class="cell">Assistant's First Name<br /><input type="text" class="assistantFirstNameInput" placeholder="First Name" tabindex="2"></div>
						<div class="cell">Assistant's Last Name<br /><input type="text" class="assistantLastNameInput" placeholder="Last Name" tabindex="3"></div>
						<div class="cell">Assistant's Email<br /><input type="text" class="assistantEmailInput" placeholder="" tabindex="2"></div>
						<div class="cell">Assistant's Phone Number<br /><input type="text" class="assistantPhoneInput" placeholder="" tabindex="3"></div>
					</div>
					<div class="tableHeader">Miscellaneous</div>
					<div class="row">
						<div class="cell">Active<br /><input class="activeInput" type="checkbox" tabindex="18" checked="checked"></div>
						<div class="cell">Holiday Card Recipient<br /><input class="cardRecipientInput" type="checkbox" tabindex="18"></div>
						<div class="cell">Community Breakfast Attendee<br /><input class="breakfastAttendee" type="checkbox" tabindex="18"></div>
						<div class="cell">Permit<br /><input type="text" class="permitInput" id="permit" placeholder="" tabindex="19"></div>
					</div>
					<div class="row">
						<div class="noteCell">
							Note<br /><textarea style="width: 100%" name="Note" class="noteInput" rows="2" cols="125" tabindex="20"></textarea>
						</div>
						<div class="saveEditCell"><input type="button" class="saveButton yellowizedButton" value="Save" id="button" tabindex="21"></div>
					</div>
				</div>
		</form>
	</div>

        <div class="popup" id="matchFoundPopup" style="">
            <div class="popupMessageDiv">
                <p class="matchMessage"></p>
            </div>
            <div class="popupButtonsDiv" currentID="">
                <input type="button" class="yellowizedButton confirmButton" id="yesButton" value="Yes" id="button" style="margin-left: 0" onclick="isMatch()">
                <input type="button" class="yellowizedButton confirmButton" id="noButton" value="No" id="button" style="margin-right: 0" onclick="notMatch()">
            </div>
        </div>
        <div class="popup" id="messagePopup" style="">
            <div class="popupAlertDiv">
                <p class="popupMessage"></p>
            </div>
            <div class="popupAlertButtonsDiv" currentID="">
                <input type="button" class="yellowizedButton confirmButton" id="okButton" value="OK" id="button" style="margin-left: 0" onclick="closePopupAlert()">
            </div>
        </div>
    </body>
